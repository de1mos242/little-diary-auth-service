"""Default configuration

Use env var to override
"""
import os

ENV = os.getenv("FLASK_ENV")
DEBUG = ENV == "development"
JWT_ALGORITHM = os.getenv("JWT_ALGORITHM")
JWT_PRIVATE_KEY = os.getenv("JWT_PRIVATE_KEY", '').replace('\\n', '\n')
JWT_PUBLIC_KEY = os.getenv("JWT_PUBLIC_KEY", '').replace('\\n', '\n')

JWT_USER_ACCESS_TOKEN_EXPIRE_SECONDS = os.getenv("JWT_USER_ACCESS_TOKEN_EXPIRE_SECONDS", 15 * 60)  # 15 min
JWT_USER_REFRESH_TOKEN_EXPIRE_SECONDS = os.getenv("JWT_USER_REFRESH_TOKEN_EXPIRE_SECONDS", 30 * 24 * 60 * 60)  # 30 days
JWT_TECH_ACCESS_TOKEN_EXPIRE_SECONDS = os.getenv("JWT_TECH_ACCESS_TOKEN_EXPIRE_SECONDS", 1 * 24 * 60 * 60)  # 1 day
JWT_TECH_REFRESH_TOKEN_EXPIRE_SECONDS = os.getenv("JWT_TECH_REFRESH_TOKEN_EXPIRE_SECONDS", 90 * 24 * 60 * 60)  # 90 days

ADMIN_USER_DEFAULT_PASSWORD = os.getenv("ADMIN_USER_DEFAULT_PASSWORD", "poiu")
MEASUREMENT_TECH_USER_DEFAULT_PASSWORD = os.getenv("MEASUREMENT_TECH_USER_DEFAULT_PASSWORD", "mkop")

SQLALCHEMY_DATABASE_URI = os.getenv("DATABASE_URI")
SQLALCHEMY_TRACK_MODIFICATIONS = False

JWT_BLACKLIST_ENABLED = True
JWT_BLACKLIST_TOKEN_CHECKS = ["access", "refresh"]

OAUTH_GOOGLE_CLIENT_ID = os.getenv("OAUTH_GOOGLE_CLIENT_ID", "EMPTY_OAUTH_GOOGLE_CLIENT_ID")
OAUTH_GOOGLE_CLIENT_SECRET = os.getenv("OAUTH_GOOGLE_CLIENT_SECRET", "EMPTY_OAUTH_GOOGLE_CLIENT_SECRET")
OAUTH_GOOGLE_REDIRECT_URI = os.getenv("OAUTH_GOOGLE_REDIRECT_URI", "EMPTY_OAUTH_GOOGLE_REDIRECT_URI")
